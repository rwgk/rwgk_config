#!/bin/bash

# Generated by ChatGPT 2025-02-15+0930 (no manual changes)
# https://chatgpt.com/share/67b0d370-1f98-8008-9fb5-bd292a92ec0a

# Check if a string is provided
if [ -z "$1" ]; then
  echo "Usage: $0 \"STRING\""
  exit 1
fi

STRING="$1"

# Get all commits (oldest first)
ALL_COMMITS=$(git rev-list --all | tac)

# Get commits where STRING appears
MATCHING_COMMITS=$(git rev-list --all | xargs git grep -l "$STRING" | cut -d':' -f1 | sort | uniq)

# Variables to track ranges
IN_MATCH=0
START_COMMIT=""
PREV_COMMIT=""
LAST_MATCHED=""

echo "Commit Ranges for '$STRING':"
echo "----------------------------"

# Iterate through all commits
for COMMIT in $ALL_COMMITS; do
    if echo "$MATCHING_COMMITS" | grep -q "$COMMIT"; then
        # If in a non-matching range, close it
        if [ "$IN_MATCH" -eq 0 ] && [ -n "$START_COMMIT" ]; then
            echo "$START_COMMIT...$PREV_COMMIT no match"
            START_COMMIT=""
        fi
        # Start a new match range
        if [ "$IN_MATCH" -eq 0 ]; then
            START_COMMIT=$COMMIT
            IN_MATCH=1
        fi
        LAST_MATCHED=$COMMIT
    else
        # If in a matching range, close it
        if [ "$IN_MATCH" -eq 1 ]; then
            echo "$START_COMMIT...$LAST_MATCHED match"
            START_COMMIT=""
        fi
        # Start a new no-match range
        if [ "$IN_MATCH" -eq 1 ] || [ -z "$START_COMMIT" ]; then
            START_COMMIT=$COMMIT
            IN_MATCH=0
        fi
    fi
    PREV_COMMIT=$COMMIT
done

# Close any open range
if [ -n "$START_COMMIT" ]; then
    if [ "$IN_MATCH" -eq 1 ]; then
        echo "$START_COMMIT...$LAST_MATCHED match"
    else
        echo "$START_COMMIT...$PREV_COMMIT no match"
    fi
fi
