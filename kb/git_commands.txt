git branch --unset-upstream  # current branch
git branch --unset-upstream other-branch

git push --set-upstream origin local-branch:archive/pr1234_new-name
git config --local push.default upstream  # tracking between branches with different names: make git less cautious (local repo only)

# Delete remote branch
git push origin --delete some_branch

git commit --allow-empty -m "[skip ci] empty commit"

#             vv JUST A BRANCH NAME vv         vvvvv REMOTE/BRANCH vvvv
git switch -c other_ghuser/some_branch --track other_ghuser/some_branch

# Get short commit hash of HEAD
git rev-parse --short HEAD

# Get commit hash that was HEAD right before the merge. This assumes the merge commit is still HEAD.
git rev-parse HEAD@{1}

# To archive numbered patches (e.g. from debugging work):
git format-patch --author="Ralf W. Grosse-Kunstleve" upstream/main..HEAD

# Create __EMPTY__ branch
git checkout --orphan new-branch-name && git rm -rf . && git status

# All commits not on main, and excluding merge commits
git log --no-merges main..move_path_finder_to_top

# List of commit messages similar to what a Squash merge in the github web UI would generate.
git log --reverse --no-merges --format='* %s' main..HEAD

# shows the raw object, which can be interesting to see exactly what Git stores in the object.
git cat-file -p <hash>

# print file at given hash
git show 2642002380:elf/link.h
